using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using generate.core.Models.App;

namespace generate.core.Helpers.ReferenceData
{
    public class CategoryHelper
    {
        public static List<Category> GetData()
        {

            /*
            select 'data.Add(new Category() { 
            CategoryId = ' + convert(varchar(20), CategoryId) + ',
            CategoryCode = "' + CategoryCode + '",
            CategoryName = "' + CategoryName + '"
            });'
            from App.Categories
            */

            var data = new List<Category>();
            
            data.Add(new Category() { CategoryId = 1, CategoryCode = "DISCIPLINEACTION", CategoryName = "Disciplinary Action" });
            data.Add(new Category() { CategoryId = 144, CategoryCode = "ASSESSMENTSUBJECT", CategoryName = "Assessment Subject" });
            data.Add(new Category() { CategoryId = 145, CategoryCode = "PERSONNELTYPE", CategoryName = "Personnel Type" });
            data.Add(new Category() { CategoryId = 146, CategoryCode = "TITLEISCHSTATUS", CategoryName = "Title 1 school status" });
            data.Add(new Category() { CategoryId = 147, CategoryCode = "DISABIDEASTATUS", CategoryName = "IDEA Status" });
            data.Add(new Category() { CategoryId = 148, CategoryCode = "GRADELVL", CategoryName = "Grade Level" });
            data.Add(new Category() { CategoryId = 229, CategoryCode = "ACADSUBAP", CategoryName = "Academic Subject (AP Participation)" });
            data.Add(new Category() { CategoryId = 230, CategoryCode = "ACADSUBASSES", CategoryName = "Academic Subject (Assessment)" });
            data.Add(new Category() { CategoryId = 231, CategoryCode = "ACADSUBSECD", CategoryName = "Academic Subject (Secondary)" });
            data.Add(new Category() { CategoryId = 232, CategoryCode = "AGEEXITSPED", CategoryName = "Age (Exiting)" });
            data.Add(new Category() { CategoryId = 233, CategoryCode = "AGEGRDMGRNT", CategoryName = "Age/Grade (Migrant)" });
            data.Add(new Category() { CategoryId = 234, CategoryCode = "AGEGRDTITLEI", CategoryName = "Age/Grade (Title I)" });
            data.Add(new Category() { CategoryId = 235, CategoryCode = "AGEGRPDISCP", CategoryName = "Age Group (Discipline)" });
            data.Add(new Category() { CategoryId = 236, CategoryCode = "AGEGRPEXIT", CategoryName = "Age Group (Exiting)" });
            data.Add(new Category() { CategoryId = 237, CategoryCode = "AGEGRPIDEATCH", CategoryName = "Age Group (IDEA Teachers)" });
            data.Add(new Category() { CategoryId = 238, CategoryCode = "AGEGRPPLACE", CategoryName = "Age Group (Placement)" });
            data.Add(new Category() { CategoryId = 239, CategoryCode = "AGEIDEAEC", CategoryName = "Age (IDEA-EC)" });
            data.Add(new Category() { CategoryId = 240, CategoryCode = "AGEIDEASA", CategoryName = "Age (IDEA-SA)" });
            data.Add(new Category() { CategoryId = 241, CategoryCode = "ASSESSADMIN", CategoryName = "Assessment Administered (Participation)" });
            data.Add(new Category() { CategoryId = 242, CategoryCode = "ASSESSINCL", CategoryName = "Assessment Inclusion" });
            data.Add(new Category() { CategoryId = 243, CategoryCode = "BASISEXIT", CategoryName = "Basis of Exit" });
            data.Add(new Category() { CategoryId = 244, CategoryCode = "CERTSTATUS", CategoryName = "Certification Status" });
            data.Add(new Category() { CategoryId = 245, CategoryCode = "COUNTRY", CategoryName = "Country of Origin" });
            data.Add(new Category() { CategoryId = 246, CategoryCode = "DIPLCREDTYPE", CategoryName = "Diploma/Credential" });
            data.Add(new Category() { CategoryId = 247, CategoryCode = "DISABCATIDEA", CategoryName = "Disability Category (IDEA)" });
            data.Add(new Category() { CategoryId = 248, CategoryCode = "DISABOCRA", CategoryName = "Disability Category (OCR Group A)" });
            data.Add(new Category() { CategoryId = 249, CategoryCode = "DISABOCRB", CategoryName = "Disability Category (OCR Group B)" });
            data.Add(new Category() { CategoryId = 250, CategoryCode = "DISABSTATIDEA", CategoryName = "Disability Status (IDEA)" });
            data.Add(new Category() { CategoryId = 251, CategoryCode = "DSCLPMNONDISAB", CategoryName = "Discipline Method (Non-Disabled)" });
            data.Add(new Category() { CategoryId = 252, CategoryCode = "DSCLPR", CategoryName = "Discipline Reason" });
            data.Add(new Category() { CategoryId = 253, CategoryCode = "DSCPLIDEA", CategoryName = "Discipline Reason (IDEA)" });
            data.Add(new Category() { CategoryId = 254, CategoryCode = "DSCPLMIDEA504", CategoryName = "Discipline Method (IDEA/504)" });
            data.Add(new Category() { CategoryId = 255, CategoryCode = "DSCPLSDF", CategoryName = "Discipline Reason (Safe and Drug-Free)" });
            data.Add(new Category() { CategoryId = 256, CategoryCode = "ECODIS", CategoryName = "Economically Disadvantaged Status" });
            data.Add(new Category() { CategoryId = 257, CategoryCode = "EDENVIREC", CategoryName = "Educational Environment (Early Childhood)" });
            data.Add(new Category() { CategoryId = 258, CategoryCode = "EDENVIRIDEA", CategoryName = "Educational Environment (IDEA)" });
            data.Add(new Category() { CategoryId = 259, CategoryCode = "EDENVIROCRSE60", CategoryName = "Educational Environment (OCR SE60)" });
            data.Add(new Category() { CategoryId = 260, CategoryCode = "EDENVIROCRSPEC", CategoryName = "Educational Environment (OCR Specific)" });
            data.Add(new Category() { CategoryId = 261, CategoryCode = "ENGPROFLVL", CategoryName = "English Proficiency Level" });
            data.Add(new Category() { CategoryId = 262, CategoryCode = "FYRSTATUS", CategoryName = "Full Academic Year Status" });
            data.Add(new Category() { CategoryId = 263, CategoryCode = "GENDER", CategoryName = "Gender" });
            data.Add(new Category() { CategoryId = 264, CategoryCode = "GRADELDROP", CategoryName = "Grade Level (Dropout)" });
            data.Add(new Category() { CategoryId = 265, CategoryCode = "GRADELVLASS", CategoryName = "Grade Level (Assessment)" });
            data.Add(new Category() { CategoryId = 266, CategoryCode = "GRADELVMEM", CategoryName = "Grade Level (Membership)" });
            data.Add(new Category() { CategoryId = 267, CategoryCode = "GRADELVPROM", CategoryName = "Grade Level (Promotion)" });
            data.Add(new Category() { CategoryId = 268, CategoryCode = "GRADERGELIG", CategoryName = "Grade Range (Eligible)" });
            data.Add(new Category() { CategoryId = 269, CategoryCode = "GRADERGSERV", CategoryName = "Grade Range (Served)" });
            data.Add(new Category() { CategoryId = 270, CategoryCode = "HOMELESSUNAC", CategoryName = "Homeless Unaccompanied Youth Status" });
            data.Add(new Category() { CategoryId = 271, CategoryCode = "HOMELSPRMRES", CategoryName = "Homeless Primary Nighttime Residence" });
            data.Add(new Category() { CategoryId = 272, CategoryCode = "HOMELSSRV", CategoryName = "Homeless Served Status" });
            data.Add(new Category() { CategoryId = 273, CategoryCode = "HOMELSSTATUS", CategoryName = "Homeless Status" });
            data.Add(new Category() { CategoryId = 274, CategoryCode = "IMGRNTSTATUS", CategoryName = "Immigrant Status" });
            data.Add(new Category() { CategoryId = 275, CategoryCode = "INSTRASEC", CategoryName = "Instructional Assignment (Secondary)" });
            data.Add(new Category() { CategoryId = 276, CategoryCode = "INSTRASSG", CategoryName = "Instructional Assignment" });
            data.Add(new Category() { CategoryId = 277, CategoryCode = "INSTRLEPCRED", CategoryName = "LEP Instructor Credential" });
            data.Add(new Category() { CategoryId = 278, CategoryCode = "INSTRSET", CategoryName = "Instructional Setting" });
            data.Add(new Category() { CategoryId = 279, CategoryCode = "INTERNETACC", CategoryName = "Internet Access (Internet Access Type)" });
            data.Add(new Category() { CategoryId = 280, CategoryCode = "LANGASSES", CategoryName = "Language (Assessment)" });
            data.Add(new Category() { CategoryId = 281, CategoryCode = "LANGHOME", CategoryName = "Language (Home)" });
            data.Add(new Category() { CategoryId = 282, CategoryCode = "LANGINSTRLEP", CategoryName = "Type of Language Instruction for LEP Students" });
            data.Add(new Category() { CategoryId = 283, CategoryCode = "LEPASSES", CategoryName = "LEP Status (Assessment)" });
            data.Add(new Category() { CategoryId = 284, CategoryCode = "LEPIMGRNT", CategoryName = "LEP Status (Immigrant)" });
            data.Add(new Category() { CategoryId = 285, CategoryCode = "LEPOELA", CategoryName = "LEP Status (OELA)" });
            data.Add(new Category() { CategoryId = 286, CategoryCode = "LEPPROGTIME", CategoryName = "Time in Program for LEP Students" });
            data.Add(new Category() { CategoryId = 287, CategoryCode = "LEPTERMREASON", CategoryName = "Reason for LEP Program Termination" });
            data.Add(new Category() { CategoryId = 288, CategoryCode = "LUNCHPROG", CategoryName = "Lunch Program Status" });
            data.Add(new Category() { CategoryId = 289, CategoryCode = "MEPPOS", CategoryName = "Migrant Priority for Services Status" });
            data.Add(new Category() { CategoryId = 290, CategoryCode = "MEPSESSENROL", CategoryName = "MEP Session Type (Enrollment)" });
            data.Add(new Category() { CategoryId = 291, CategoryCode = "MEPSESSSERV", CategoryName = "MEP Session Type (Services)" });
            data.Add(new Category() { CategoryId = 292, CategoryCode = "MEPSESSSTF", CategoryName = "MEP Session Type" });
            data.Add(new Category() { CategoryId = 293, CategoryCode = "MGRNTSERV", CategoryName = "Migrant Service Type" });
            data.Add(new Category() { CategoryId = 294, CategoryCode = "MIGRNTSTATUS", CategoryName = "Migratory Status" });
            data.Add(new Category() { CategoryId = 295, CategoryCode = "MOBILITYSTATUS", CategoryName = "Mobility Status" });
            data.Add(new Category() { CategoryId = 296, CategoryCode = "NCLBSCHIMP", CategoryName = "NCLB School Improvement Options" });
            data.Add(new Category() { CategoryId = 297, CategoryCode = "NEGDELINSERV", CategoryName = "Neglected or Delinquent Services Received" });
            data.Add(new Category() { CategoryId = 298, CategoryCode = "NEGDELINSTATUS", CategoryName = "Neglected or Delinquent Status" });
            data.Add(new Category() { CategoryId = 299, CategoryCode = "PARAPROFQUAL", CategoryName = "Paraprofessional Qualification" });
            data.Add(new Category() { CategoryId = 300, CategoryCode = "PARAPROFTYPE", CategoryName = "Staff Category (Paraprofessionals)" });
            data.Add(new Category() { CategoryId = 301, CategoryCode = "PERFLVL", CategoryName = "Performance Level" });
            data.Add(new Category() { CategoryId = 302, CategoryCode = "QUAL", CategoryName = "Qualification Presence" });
            data.Add(new Category() { CategoryId = 303, CategoryCode = "RACEETHNIC", CategoryName = "Racial Ethnic" });
            data.Add(new Category() { CategoryId = 304, CategoryCode = "REMOVALTYPE", CategoryName = "Removal Type" });
            data.Add(new Category() { CategoryId = 305, CategoryCode = "SEC504STATUS", CategoryName = "Section 504 Status" });
            data.Add(new Category() { CategoryId = 306, CategoryCode = "SERVICETYPE", CategoryName = "Type of Services Received" });
            data.Add(new Category() { CategoryId = 307, CategoryCode = "SNGPARPREG", CategoryName = "Single Parents Status" });
            data.Add(new Category() { CategoryId = 308, CategoryCode = "STAFFCATGCCD", CategoryName = "Staff Category (CCD)" });
            data.Add(new Category() { CategoryId = 309, CategoryCode = "STAFFCATGMEP", CategoryName = "Staff Category (MEP)" });
            data.Add(new Category() { CategoryId = 310, CategoryCode = "STAFFCATGSCH", CategoryName = "Staff Category (School)" });
            data.Add(new Category() { CategoryId = 311, CategoryCode = "STAFFCATTECH", CategoryName = "Staff Category (Technology)" });
            data.Add(new Category() { CategoryId = 312, CategoryCode = "STAFFTITLEI", CategoryName = "Staff Category (Title I)" });
            data.Add(new Category() { CategoryId = 313, CategoryCode = "TEACHCRED", CategoryName = "Teaching Credential Type" });
            data.Add(new Category() { CategoryId = 314, CategoryCode = "TECHPROFDEV", CategoryName = "Technology Professional Development Hours" });
            data.Add(new Category() { CategoryId = 315, CategoryCode = "TESTSTATUS", CategoryName = "Testing Status (OCR)" });
            data.Add(new Category() { CategoryId = 316, CategoryCode = "TITLEIINSTSERV", CategoryName = "Title I Instructional Services" });
            data.Add(new Category() { CategoryId = 317, CategoryCode = "TITLEIPROG", CategoryName = "Title I Program Type" });
            data.Add(new Category() { CategoryId = 318, CategoryCode = "TITLEISUPP", CategoryName = "Title I Support Services" });
            data.Add(new Category() { CategoryId = 319, CategoryCode = "USSCHATTEND", CategoryName = "Years Attending US Schools" });
            data.Add(new Category() { CategoryId = 320, CategoryCode = "REASNOASSESS", CategoryName = "Reason for Not Participating in Assessment" });
            data.Add(new Category() { CategoryId = 321, CategoryCode = "FEDPROG", CategoryName = "Federal Program Code" });
            data.Add(new Category() { CategoryId = 322, CategoryCode = "ECODISAD", CategoryName = "Economic Circumstance" });
            data.Add(new Category() { CategoryId = 323, CategoryCode = "TESTED", CategoryName = "Tested" });
            data.Add(new Category() { CategoryId = 324, CategoryCode = "RESULT", CategoryName = "Result" });
            data.Add(new Category() { CategoryId = 325, CategoryCode = "ACCOMMOD", CategoryName = "Accommodations" });
            data.Add(new Category() { CategoryId = 326, CategoryCode = "DSCPLMDRGFREE", CategoryName = "Discipline Method (Safe and Drug-Free)" });
            data.Add(new Category() { CategoryId = 327, CategoryCode = "FIREARMINC", CategoryName = "Discipline Method (Firearms)" });
            data.Add(new Category() { CategoryId = 328, CategoryCode = "INVALIDATION", CategoryName = "Invalidation" });
            data.Add(new Category() { CategoryId = 329, CategoryCode = "LENGTHPLCMT", CategoryName = "Length of Placement" });
            data.Add(new Category() { CategoryId = 330, CategoryCode = "LEPACCOMMOD", CategoryName = "LEP Accommodation" });
            data.Add(new Category() { CategoryId = 331, CategoryCode = "NCLBCAPINCL", CategoryName = "NCLB Cap Inclusion" });
            data.Add(new Category() { CategoryId = 332, CategoryCode = "NEGDELPROGTYPE", CategoryName = "N or D Program (Subpart 1)" });
            data.Add(new Category() { CategoryId = 333, CategoryCode = "PREPOSTTEST", CategoryName = "Pre-Post-Test Indicator" });
            data.Add(new Category() { CategoryId = 334, CategoryCode = "PROGRESSLEVEL", CategoryName = "Progress Level" });
            data.Add(new Category() { CategoryId = 335, CategoryCode = "LEPATTAINMENT", CategoryName = "Progress/Attainment" });
            data.Add(new Category() { CategoryId = 336, CategoryCode = "QUALSTATTCH", CategoryName = "Qualification Status (Teachers)" });
            data.Add(new Category() { CategoryId = 337, CategoryCode = "REMOVALLEN", CategoryName = "Removal Length" });
            data.Add(new Category() { CategoryId = 338, CategoryCode = "REMOVALLENDIS", CategoryName = "Removal Length (Disciplinary Actions)" });
            data.Add(new Category() { CategoryId = 339, CategoryCode = "REMOVALLENSUS", CategoryName = "Removal Length (Suspensions/Expulsions)" });
            data.Add(new Category() { CategoryId = 340, CategoryCode = "RLISPURPOSE", CategoryName = "RLIS Purpose" });
            data.Add(new Category() { CategoryId = 341, CategoryCode = "STAFFSPED", CategoryName = "Staff Category (Special Education Related Service)" });
            data.Add(new Category() { CategoryId = 342, CategoryCode = "STAFFTCH", CategoryName = "Staff Category (Teacher)" });
            data.Add(new Category() { CategoryId = 343, CategoryCode = "TESTSTATUSASS", CategoryName = "Testing Status (Assessment)" });
            data.Add(new Category() { CategoryId = 344, CategoryCode = "VOCATEDU", CategoryName = "Vocational Education Status" });
            data.Add(new Category() { CategoryId = 345, CategoryCode = "VOCATSTATUS", CategoryName = "Vocational Status" });
            data.Add(new Category() { CategoryId = 346, CategoryCode = "WEAPONTYPE", CategoryName = "Weapon" });
            data.Add(new Category() { CategoryId = 347, CategoryCode = "ATTAINSTATUS", CategoryName = "Attainment Status" });
            data.Add(new Category() { CategoryId = 348, CategoryCode = "QUALSTATPARA", CategoryName = "Qualification Status (Paraprofessionals)" });
            data.Add(new Category() { CategoryId = 349, CategoryCode = "LEPMTPL", CategoryName = "LEP Status (Multiple)" });
            data.Add(new Category() { CategoryId = 350, CategoryCode = "LEPONLY", CategoryName = "English Learner Status (Only)" });
            data.Add(new Category() { CategoryId = 351, CategoryCode = "LEPBOTH", CategoryName = "English Learner Status (Both)" });
            data.Add(new Category() { CategoryId = 352, CategoryCode = "GRADELVLPROG", CategoryName = "Grade Level (Program Services)" });
            data.Add(new Category() { CategoryId = 353, CategoryCode = "SEX", CategoryName = "Sex (Membership)" });
            data.Add(new Category() { CategoryId = 354, CategoryCode = "AGESA", CategoryName = "Age (School Age)" });
            data.Add(new Category() { CategoryId = 355, CategoryCode = "AGEGRPIDEASTAFF", CategoryName = "Age Group (IDEA Staff)" });
            data.Add(new Category() { CategoryId = 356, CategoryCode = "DISABSTATUS", CategoryName = "Disability Status (Only)" });
            data.Add(new Category() { CategoryId = 357, CategoryCode = "AGEEC", CategoryName = "Age (Early Childhood)" });
            data.Add(new Category() { CategoryId = 358, CategoryCode = "EDENVIDEAEC", CategoryName = "Educational Environment (IDEA) EC" });
            data.Add(new Category() { CategoryId = 359, CategoryCode = "PRIORLEAID", CategoryName = "Prior State LEA ID (LEA ID)" });
            data.Add(new Category() { CategoryId = 360, CategoryCode = "PRIORSCHOOLID", CategoryName = "Prior State School ID (School ID)" });
            data.Add(new Category() { CategoryId = 361, CategoryCode = "REMOVALLENIDEA", CategoryName = "Removal Length (IDEA)" });
            data.Add(new Category() { CategoryId = 362, CategoryCode = "LEPFORMER", CategoryName = "LEP Status (Former)" });
            data.Add(new Category() { CategoryId = 363, CategoryCode = "EDENVIRIDEASA", CategoryName = "Educational Environment (IDEA) SA" });
            data.Add(new Category() { CategoryId = 364, CategoryCode = "REMOVALTYPE", CategoryName = "Interim Removal (IDEA)" });
            data.Add(new Category() { CategoryId = 365, CategoryCode = "DSCPLMETHOD", CategoryName = "Discipline Method (Suspension/Expulsion)" });
            data.Add(new Category() { CategoryId = 366, CategoryCode = "REMOVEREASON", CategoryName = "Interim Removal Reason (IDEA)" });
            data.Add(new Category() { CategoryId = 367, CategoryCode = "AMAOASSESS", CategoryName = "AMAO (Assessment)" });
            data.Add(new Category() { CategoryId = 368, CategoryCode = "IDEAMODEXP", CategoryName = "IDEA Modified Expulsions" });
            data.Add(new Category() { CategoryId = 369, CategoryCode = "GRADE8TECHSTAT", CategoryName = "Technology Literacy Status" });
            data.Add(new Category() { CategoryId = 370, CategoryCode = "FEDPROGTRANS", CategoryName = "Federal Program Code (Transferability)" });
            data.Add(new Category() { CategoryId = 371, CategoryCode = "SEXGRADUATE", CategoryName = "Sex (Graduates)" });
            data.Add(new Category() { CategoryId = 372, CategoryCode = "ACADSUBTESTED", CategoryName = "Academic Subject (Tested)" });
            data.Add(new Category() { CategoryId = 373, CategoryCode = "MOBILSTATUSMNTH", CategoryName = "Mobility Status (Qualifying Moves)" });
            data.Add(new Category() { CategoryId = 374, CategoryCode = "MOBILSTATUSSY", CategoryName = "Mobility Status (Regular School Year)" });
            data.Add(new Category() { CategoryId = 375, CategoryCode = "IMGRNTPROGPART", CategoryName = "Program Participation (Immigrant)" });
            data.Add(new Category() { CategoryId = 376, CategoryCode = "STAFFTECHSKILL", CategoryName = "Technology Skills" });
            data.Add(new Category() { CategoryId = 377, CategoryCode = "AGEGROUP", CategoryName = "Age Group" });
            data.Add(new Category() { CategoryId = 378, CategoryCode = "GRADELVBASIC", CategoryName = "Grade Level (Basic)" });
            data.Add(new Category() { CategoryId = 379, CategoryCode = "HOMELESS", CategoryName = "Homeless Status (Only)" });
            data.Add(new Category() { CategoryId = 380, CategoryCode = "AGEGRDHMLS", CategoryName = "Age/Grade (w/o Out of School)" });
            data.Add(new Category() { CategoryId = 381, CategoryCode = "FAINCIDEA", CategoryName = "Discipline Method (Firearms-IDEA)" });
            data.Add(new Category() { CategoryId = 382, CategoryCode = "FAINCNOTIDEA", CategoryName = "Discipline Method (Firearms-not IDEA)" });
            data.Add(new Category() { CategoryId = 383, CategoryCode = "AGE3TOGRADE12", CategoryName = "Age/Grade (3-5/K-12)" });
            data.Add(new Category() { CategoryId = 384, CategoryCode = "MONLEPFORMER", CategoryName = "Former English Learner Year" });
            data.Add(new Category() { CategoryId = 385, CategoryCode = "AGE3TOGRADE12UG", CategoryName = "Age/Grade (w/out Under 3 or Out of School)" });
            data.Add(new Category() { CategoryId = 386, CategoryCode = "NEGDELPROGTYPE2", CategoryName = "N or D Program (Subpart 2)" });
            data.Add(new Category() { CategoryId = 387, CategoryCode = "PRETESTRESULT", CategoryName = "Pretest Results" });
            data.Add(new Category() { CategoryId = 388, CategoryCode = "FIRSTASSESS", CategoryName = "First Assessment" });
            data.Add(new Category() { CategoryId = 389, CategoryCode = "EDUSERVICES", CategoryName = "Educational Services" });
            data.Add(new Category() { CategoryId = 390, CategoryCode = "AGEGRDALL", CategoryName = "Age/Grade (All)" });
            data.Add(new Category() { CategoryId = 391, CategoryCode = "AGEGRDWOU3", CategoryName = "Age/Grade (w/o Under 3)" });
            data.Add(new Category() { CategoryId = 392, CategoryCode = "MEPPOSONLY", CategoryName = "Priority for Services (Only)" });
            data.Add(new Category() { CategoryId = 393, CategoryCode = "MEPCONTINUE", CategoryName = "Continuation (Only)" });
            data.Add(new Category() { CategoryId = 394, CategoryCode = "LEPACCOUNT", CategoryName = "LEP Status (Accountability)" });
            data.Add(new Category() { CategoryId = 395, CategoryCode = "STAFFTITLEI", CategoryName = "Staff Category (Title I)" });
            data.Add(new Category() { CategoryId = 396, CategoryCode = "MEPSERVICES", CategoryName = "MEP Services" });
            data.Add(new Category() { CategoryId = 397, CategoryCode = "AGEALL", CategoryName = "Age (All)" });
            data.Add(new Category() { CategoryId = 398, CategoryCode = "AGEU3TOGR12UG", CategoryName = "Age/Grade (w/o Out of School)" });
            data.Add(new Category() { CategoryId = 399, CategoryCode = "ALLOCTYPE", CategoryName = "Funding Allocation Type" });
            data.Add(new Category() { CategoryId = 400, CategoryCode = "TITLEACT", CategoryName = "English Learner Accountability" });
            data.Add(new Category() { CategoryId = 401, CategoryCode = "MAJORREG", CategoryName = "Major Racial and Ethnic Groups" });
            data.Add(new Category() { CategoryId = 402, CategoryCode = "PROFSTATUS", CategoryName = "Proficiency Status" });
            data.Add(new Category() { CategoryId = 403, CategoryCode = "AASTANDARD", CategoryName = "Assessment Achievement Standard" });
            data.Add(new Category() { CategoryId = 404, CategoryCode = "PARTSTATUS", CategoryName = "Participation Status" });
            data.Add(new Category() { CategoryId = 405, CategoryCode = "COHSTATUS", CategoryName = "Cohort Status" });
            data.Add(new Category() { CategoryId = 406, CategoryCode = "CORRECTACT", CategoryName = "Corrective Action" });
            data.Add(new Category() { CategoryId = 407, CategoryCode = "RESTRUCTACT", CategoryName = "Restructuring Action" });
            data.Add(new Category() { CategoryId = 408, CategoryCode = "DISABSTATADA", CategoryName = "Disability Status (ADA)" });
            data.Add(new Category() { CategoryId = 409, CategoryCode = "SPECPOPUL", CategoryName = "Special Population (Perkins)" });
            data.Add(new Category() { CategoryId = 410, CategoryCode = "INCLUTYP", CategoryName = "Inclusion Type" });
            data.Add(new Category() { CategoryId = 411, CategoryCode = "REPSENTSTAT", CategoryName = "Representation Status" });
            data.Add(new Category() { CategoryId = 412, CategoryCode = "TESRES", CategoryName = "Test Result" });
            data.Add(new Category() { CategoryId = 413, CategoryCode = "DISPHOMEMAK", CategoryName = "Displaced Homemaker" });
            data.Add(new Category() { CategoryId = 414, CategoryCode = "LEPPERKINS", CategoryName = "LEP Status (Perkins)" });
            data.Add(new Category() { CategoryId = 415, CategoryCode = "TECHPREP", CategoryName = "Tech prep" });
            data.Add(new Category() { CategoryId = 416, CategoryCode = "NONTENR", CategoryName = "Non-Traditional Enrollees" });
            data.Add(new Category() { CategoryId = 417, CategoryCode = "DIPLCREDTYPEX", CategoryName = "Diploma/Credential (Expanded)" });
            data.Add(new Category() { CategoryId = 418, CategoryCode = "PROFSTATUS", CategoryName = "Proficiency Status" });
            data.Add(new Category() { CategoryId = 419, CategoryCode = "DISABSTATADA", CategoryName = "Disability Status (IDEA or ADA)" });
            data.Add(new Category() { CategoryId = 420, CategoryCode = "FIRSTASSESS", CategoryName = "Assessed First Time" });
            data.Add(new Category() { CategoryId = 421, CategoryCode = "EQUIPMENT", CategoryName = "Equipment (Internet Access Equipment)" });
            data.Add(new Category() { CategoryId = 422, CategoryCode = "HOMELSENRLSTAT", CategoryName = "Homeless Enrolled Status" });
            data.Add(new Category() { CategoryId = 423, CategoryCode = "LEPSTATRLA", CategoryName = "English Learner Status (RLA)" });
            data.Add(new Category() { CategoryId = 424, CategoryCode = "DISABSTATACCT", CategoryName = "Disability Status (Accountability)" });
            data.Add(new Category() { CategoryId = 425, CategoryCode = "ASSESSADMIN", CategoryName = "Assessment Administered (Achievement)" });
            data.Add(new Category() { CategoryId = 426, CategoryCode = "PSECENRACTION", CategoryName = "Postsecondary Enrollment Action" });
            data.Add(new Category() { CategoryId = 427, CategoryCode = "ASSESSADMINSS", CategoryName = "Assessment Administered (Scale Score)" });
            data.Add(new Category() { CategoryId = 428, CategoryCode = "ACHPERCENTILE", CategoryName = "Achievement Percentile" });
            data.Add(new Category() { CategoryId = 429, CategoryCode = "FACADMPERFLVL", CategoryName = "Faculty/Admin Performance Level" });
            data.Add(new Category() { CategoryId = 430, CategoryCode = "PARTSTATUSMS", CategoryName = "Participation Status (MS)" });
            data.Add(new Category() { CategoryId = 431, CategoryCode = "ASMTADMNSTRD", CategoryName = "Assessment Administered" });
            data.Add(new Category() { CategoryId = 432, CategoryCode = "PARTSTATUSRLA", CategoryName = "Participation Status (RLA)" });
            data.Add(new Category() { CategoryId = 433, CategoryCode = "PLACEMENTTYPE", CategoryName = "Placement Type" });
            data.Add(new Category() { CategoryId = 434, CategoryCode = "PLACEMENTSTATUS", CategoryName = "Placement Status" });
            data.Add(new Category() { CategoryId = 435, CategoryCode = "FLEXSUBG", CategoryName = "Flexibility Subgroups" });
            data.Add(new Category() { CategoryId = 436, CategoryCode = "PSECCREDIT", CategoryName = "Postsecondary Credit" });
            data.Add(new Category() { CategoryId = 437, CategoryCode = "ACADSUBSCALE", CategoryName = "Academic Subject (Scale Score)" });
            data.Add(new Category() { CategoryId = 438, CategoryCode = "ACADVOCOUTCOME", CategoryName = "Academic / Vocational Outcomes" });
            data.Add(new Category() { CategoryId = 439, CategoryCode = "LANGHOME", CategoryName = "Language (Native)" });
            data.Add(new Category() { CategoryId = 440, CategoryCode = "HQTALT", CategoryName = "Alternative Route Status" });
            data.Add(new Category() { CategoryId = 441, CategoryCode = "AGE3TOGRADE13", CategoryName = "Age/Grade (Basic)" });
            data.Add(new Category() { CategoryId = 442, CategoryCode = "AGEGRDWO13", CategoryName = "Age/Grade (w/o 13)" });
            data.Add(new Category() { CategoryId = 443, CategoryCode = "GRADELVBASICW13", CategoryName = "Grade Level (Basic w/13)" });
            data.Add(new Category() { CategoryId = 444, CategoryCode = "AGEGRDWO13BT3", CategoryName = "Age/Grade (w/o 13 and BT2)" });
            data.Add(new Category() { CategoryId = 445, CategoryCode = "MOBILSTAT12MNTH", CategoryName = "Mobility Status (12 months)" });
            data.Add(new Category() { CategoryId = 446, CategoryCode = "REFERRALSTATUS", CategoryName = "Referral Status" });
            data.Add(new Category() { CategoryId = 447, CategoryCode = "NORDLONGTERM", CategoryName = "N or D Status (Long Term)" });
            data.Add(new Category() { CategoryId = 448, CategoryCode = "PROFSTATUS", CategoryName = "Proficiency Status (Field Testing)" });
            data.Add(new Category() { CategoryId = 449, CategoryCode = "DISABCATIDEAEXIT", CategoryName = "Disability Category (IDEA) Exiting" });
            data.Add(new Category() { CategoryId = 450, CategoryCode = "ACADSUBASSESNOSCI", CategoryName = "Academic Subject (Assessment - no science)" });
            data.Add(new Category() { CategoryId = 451, CategoryCode = "ACADVOCOUTCOME", CategoryName = "Academic / Vocational Outcomes (Exit)" });
            data.Add(new Category() { CategoryId = 452, CategoryCode = "CTEPROGPARTICIPATION", CategoryName = "CTE Program Participation" });
            data.Add(new Category() { CategoryId = 453, CategoryCode = "IMGNTTITLIIIPROG", CategoryName = "Immigrant Title III Program" });
            data.Add(new Category() { CategoryId = 454, CategoryCode = "FREELUNCH", CategoryName = "Free and Reduced Lunch" });
            data.Add(new Category() { CategoryId = 455, CategoryCode = "FOSTERCARE", CategoryName = "Foster Care" });
            data.Add(new Category() { CategoryId = 456, CategoryCode = "MAGNETSTATUS", CategoryName = "Magnet status" });
            data.Add(new Category() { CategoryId = 457, CategoryCode = "SHAREDTIMESTATUS", CategoryName = "Shared Time status" });
            data.Add(new Category() { CategoryId = 458, CategoryCode = "VIRTUALSCHSTATUS", CategoryName = "Virtual school status" });
            data.Add(new Category() { CategoryId = 459, CategoryCode = "NSLPSTATUS", CategoryName = "National School Lunch Program status" });
            data.Add(new Category() { CategoryId = 460, CategoryCode = "MEPFUNDSSTATUS", CategoryName = "Consolidated MEP funds status" });
            data.Add(new Category() { CategoryId = 461, CategoryCode = "AGEPK", CategoryName = "Age (PK)" });
            data.Add(new Category() { CategoryId = 462, CategoryCode = "DISABSTATUS504", CategoryName = "Disability Status (504)" });
            data.Add(new Category() { CategoryId = 463, CategoryCode = "FSTRCRSTS", CategoryName = "Foster Care Status" });
            data.Add(new Category() { CategoryId = 464, CategoryCode = "MILCNCTDSTDNTSTS", CategoryName = "Military Connected Student Status" });
            data.Add(new Category() { CategoryId = 465, CategoryCode = "ALLOCAREA", CategoryName = "Allocation Areas (EMAPS Survey on the Use of Funds Under Title II, Part A)" });
            data.Add(new Category() { CategoryId = 466, CategoryCode = "EVALCAT", CategoryName = "Evaluation Categories (EMAPS Survey on the Use of Funds Under Title II, Part A)" });
            data.Add(new Category() { CategoryId = 467, CategoryCode = "STAFFCATTII", CategoryName = "Staff Category (Title II) (EMAPS Survey on the Use of Funds Under Title II, Part A)" });
            data.Add(new Category() { CategoryId = 468, CategoryCode = "TITLEIIILANGINST", CategoryName = "Title III Language Instruction Program Type" });
            data.Add(new Category() { CategoryId = 469, CategoryCode = "RETENCAT", CategoryName = "RETENTION CATEGORIES (EMAPS Survey on the Use of Funds Under Title II, Part A)" });
            data.Add(new Category() { CategoryId = 470, CategoryCode = "INDTYPE", CategoryName = "Indicator Type" });
            data.Add(new Category() { CategoryId = 471, CategoryCode = "INEXPSTATUS", CategoryName = "Inexperienced Status" });
            data.Add(new Category() { CategoryId = 472, CategoryCode = "EMGCREDSTATUS", CategoryName = "Emergency or Provisional Credential Status" });
            data.Add(new Category() { CategoryId = 473, CategoryCode = "OOFIELDSTATUS", CategoryName = "Out of Field Status" });
            data.Add(new Category() { CategoryId = 474, CategoryCode = "QUALSTATSPEDTCH", CategoryName = "Qualification Status (Special Education Teacher)" });
            data.Add(new Category() { CategoryId = 475, CategoryCode = "ENGLRNACCOUBL", CategoryName = "English Learner Accountability" });
            data.Add(new Category() { CategoryId = 476, CategoryCode = "LNGINSTPRGTYPE", CategoryName = "Language Instruction Educational Program Type" });
            data.Add(new Category() { CategoryId = 477, CategoryCode = "IMPROVESTATUSSCH", CategoryName = "Improvement status - School" });
            data.Add(new Category() { CategoryId = 478, CategoryCode = "PERSISTDANGERSTATUS", CategoryName = "Persistently dangerous status" });
            data.Add(new Category() { CategoryId = 479, CategoryCode = "LEPDISC", CategoryName = "EL Status (Discipline)" });
            data.Add(new Category() { CategoryId = 480, CategoryCode = "AGEDD", CategoryName = "Age (Developmental Delay)" });
            data.Add(new Category() { CategoryId = 481, CategoryCode = "SOPINCLN", CategoryName = "SOP Inclusion" });
            data.Add(new Category() { CategoryId = 482, CategoryCode = "SOPRPTNGLVL", CategoryName = "SOP Reporting Level" });
            data.Add(new Category() { CategoryId = 483, CategoryCode = "ASMNTCHGFRMPY", CategoryName = "Assessment change from Prior Year" });
            data.Add(new Category() { CategoryId = 484, CategoryCode = "GRADELVASMTGRP", CategoryName = "Grade Level (Assessment) Group" });
            data.Add(new Category() { CategoryId = 485, CategoryCode = "PERFLVL", CategoryName = "Performance Level" });
            data.Add(new Category() { CategoryId = 486, CategoryCode = "PROFLVL", CategoryName = "Proficiency Level" });
            data.Add(new Category() { CategoryId = 487, CategoryCode = "EOGORCRS", CategoryName = "End of Grade or Course" });
            data.Add(new Category() { CategoryId = 488, CategoryCode = "YEAR", CategoryName = "Submission Year" });
            data.Add(new Category() { CategoryId = 489, CategoryCode = "AGE3TO21", CategoryName = "Age" });
            data.Add(new Category() { CategoryId = 490, CategoryCode = "AGE14TO21", CategoryName = "Student Age" });
            data.Add(new Category() { CategoryId = 491, CategoryCode = "QUALSTATSPEDTCH", CategoryName = "Qualification Status (Special Education Teacher)" });
            data.Add(new Category() { CategoryId = 492, CategoryCode = "ComprehensiveSupportIdentificationTypeID", CategoryName = "Additional targeted support school not exiting suc" });
            data.Add(new Category() { CategoryId = 493, CategoryCode = "ComprehensiveTargetedSupportSchTypeID", CategoryName = "Comprehensive Support and Improvement" });
            data.Add(new Category() { CategoryId = 494, CategoryCode = "TargetedSupportIdentificationTypeID", CategoryName = "Additional targeted support and improvement school" });
            data.Add(new Category() { CategoryId = 495, CategoryCode = "COMPREHENSIVESUPPORTIDENTIFICATIONTYPE", CategoryName = "Additional targeted support school not exiting suc" });
            data.Add(new Category() { CategoryId = 496, CategoryCode = "COMPREHENSIVETARGETEDSUPPORTSCHTYPE", CategoryName = "Comprehensive Support and Improvement" });
            data.Add(new Category() { CategoryId = 497, CategoryCode = "TARGETEDSUPPORTIDENTIFICATIONTYPE", CategoryName = "Additional targeted support and improvement school" });

            return data;

        }
    }
}
 