CREATE PROCEDURE RDS.InsertCountsIntoReportTable
	@ReportCode varchar(10),
	@SubmissionYear VARCHAR(10), 
	@ReportTableName VARCHAR(50),
	@CountColumn VARCHAR(100),
	@HavingCountColumn VARCHAR(100),
	@IsDistinctCount bit
AS 
	DECLARE @SQLStatement NVARCHAR(MAX);

	DECLARE cursor_name CURSOR FOR
    SELECT N'
		DELETE FROM rds.' + @ReportTableName + ' WHERE ReportCode = ''' + @ReportCode + ''' AND ReportYear = ''' + @SubmissionYear + '''

		-- insert ' + aol.LevelCode + ' sql
		insert into rds.' + @ReportTableName + '
		(
			ReportCode,
			ReportYear,
			ReportLevel,
			CategorySetCode,
			Categories,
			StateANSICode,
			StateAbbreviationCode,
			StateAbbreviationDescription,
			OrganizationIdentifierNces,
			OrganizationIdentifierSea,
			OrganizationName,
			ParentOrganizationIdentifierSea,
			TableTypeAbbrv,
			TotalIndicator,
			' + CASE WHEN CategorySetCode = 'TOT' THEN '' ELSE '' + ISNULL(STRING_AGG(d.DimensionFieldName, ','), '') + ',' END + '
			StudentCount
				
		)
		select 
			''' + ReportCode + ''',
			''' + SubmissionYear + ''',
			''' + LevelCode + ''',
			''' + CategorySetCode + ''',
			' + CASE WHEN CategorySetCode = 'TOT' THEN 'NULL,' ELSE '''' + ISNULL(STRING_AGG('|' + CategoryCode + '|', ','), '') + ''',' END + '
			StateANSICode,
			StateAbbreviationCode,
			StateAbbreviationDescription,
			isnull(StateANSICode,''''),' + 
			CASE aol.LevelCode
				WHEN 'SEA' THEN 'SeaOrganizationIdentifierSea'
				WHEN 'LEA' THEN 'LeaIdentifierSea' 
				WHEN 'SCH' THEN 'SchoolIdentifierSea'			
			END  + ',
			' + 
			CASE aol.LevelCode
				WHEN 'SEA' THEN 'SeaOrganizationName'
				WHEN 'LEA' THEN 'LeaOrganizationName' 
				WHEN 'SCH' THEN 'NameOfInstitution'			
			END  + ',
			' + 
			CASE aol.LevelCode
				WHEN 'SCH' THEN 'LeaIdentifierSea'			
				ELSE 'NULL'
			END  + ',
			''' + att.TableTypeAbbrv + ''' as TableTypeAbbrv,
			''' + CASE 
					WHEN cs.CategorySetCode = 'TOT'
						OR cs.CategorySetCode LIKE 'ST%' THEN 'Y'
					ELSE 'N'
				  END + ''' as TotalIndicator, ' 
				  + CASE WHEN CategorySetCode = 'TOT' THEN '' ELSE '' + ISNULL(STRING_AGG(CategoryCode, ','), '') + ',' END + '
			count(' + CASE @IsDistinctCount WHEN 1 THEN 'DISTINCT' ELSE '' END + ' cs.' + @CountColumn + ')
		from #categorySet cs 
		' +
		CASE aol.LevelCode
			WHEN 'SEA' THEN 'join rds.DimSeas sea on cs.DimSeaId = sea.DimSeaId AND sea.DimSeaId > -1'
			WHEN 'LEA' THEN 'join rds.DimLeas lea on cs.DimLeaId = lea.DimLeaId AND lea.DimLeaId > -1' 
			WHEN 'SCH' THEN 'join rds.DimK12Schools sch on cs.DimK12SchoolId = sch.DimK12SchoolId AND sch.DimK12SchoolId > -1'			
		END  + '
		group by 
			StateANSICode,
			StateAbbreviationCode,
			StateAbbreviationDescription,
			' + 
			CASE aol.LevelCode
				WHEN 'SEA' THEN 'SeaOrganizationIdentifierSea'
				WHEN 'LEA' THEN 'LeaIdentifierSea' 
				WHEN 'SCH' THEN 'LeaIdentifierSea,SchoolIdentifierSea'			
			END  + ',
			' + 
			CASE aol.LevelCode
				WHEN 'SEA' THEN 'SeaOrganizationName'
				WHEN 'LEA' THEN 'LeaOrganizationName' 
				WHEN 'SCH' THEN 'NameOfInstitution'			
			END  + '
			'  + CASE WHEN CategorySetCode = 'TOT' THEN '' ELSE ',' + ISNULL(STRING_AGG(CategoryCode, ','), '')  END + '
		having SUM(' + @HavingCountColumn + ' ) > 0'
	FROM app.GenerateReports gr
	JOIN app.CategorySets cs
		on cs.GenerateReportId = gr.GenerateReportId
	LEFT JOIN app.CategorySet_Categories csc
		on csc.CategorySetId = cs.CategorySetId
	LEFT JOIN app.Categories c 
		on c.CategoryId = csc.CategoryId
	JOIN app.OrganizationLevels aol
		ON cs.OrganizationLevelId = aol.OrganizationLevelId
	JOIN app.TableTypes att
		ON cs.TableTypeId = att.TableTypeId
	LEFT JOIN app.Category_Dimensions cd
		ON c.CategoryId = cd.CategoryId
	LEFT JOIN app.Dimensions d
		ON cd.DimensionId = d.DimensionId
	WHERE cs.SubmissionYear = @SubmissionYear
		AND gr.ReportCode = @ReportCode
	GROUP BY 
		  gr.ReportCode
		, aol.LevelCode
		, cs.CategorySetCode
		, att.TableTypeAbbrv
		, cs.SubmissionYear
	OPEN cursor_name;

	FETCH NEXT FROM cursor_name INTO @SQLStatement;

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQLStatement = REPLACE(REPLACE(@SQLStatement, ',NOCATS', ''), '_NOCATS', '')
		--select @SQLStatement
		EXEC sp_executesql @SQLStatement;
		FETCH NEXT FROM cursor_name INTO @SQLStatement;
	END

	CLOSE cursor_name;
	DEALLOCATE cursor_name;

